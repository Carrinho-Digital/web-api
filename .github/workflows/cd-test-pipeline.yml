# Copyright 2020 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Deploy to Google Cloud Engine

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE }}

jobs:
  setup-build-deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: mr-smithers-excellent/docker-build-push@v3
        id: dockerContainerRegistry
        name: Build & push Docker image
        with:
          image: $PROJECT_ID/web-api
          tag: latest
          registry: gcr.io
          dockerfile: Dockerfile
          username: _json_key
          password: ${{ secrets.GCP_APPLICATION_CREDENTIALS_JSON }}

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "286.0.0"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Run Container
        run: |
          gcloud compute ssh --quiet --zone "$GCE_INSTANCE_ZONE" "$GCE_INSTANCE" --project "${{ secrets.PROJECT_ID }}"
          sudo docker -e PORT=8080 -e MONGODB_URI=${{ secrets.MONGO_URI }} -e SALT=${{ secrets.SALT }} -e SECRET=${{ secrets.SECRET }} -e ISSUER=${{ secrets.ISSUER }} -e AUDIENCE=${{ secrets.AUDIENCE }} -e EXPIRE_IN_MINUTES=${{ secrets.EXPIRE_IN_MINUTES }} -p 8080:8080 run ${{ steps.dockerContainerRegistry.outputs.imageFullName }}
