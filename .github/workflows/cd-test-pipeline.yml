# Copyright 2020 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Deploy to Google Cloud Engine

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: carrinhodigital
  GCE_INSTANCE: webapi-instance
  GCE_INSTANCE_ZONE: us-central1-a

jobs:
  setup-build-deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Create nginx conf file
        run: |
          cat > ./app.conf <<EOF
          server {
            listen 80;
            listen [::]:80;

            server_name api.carrinhodigital.co

            location / {
              proxy_pass http://localhost:8080/;
            }
          }
          EOF

      - name: Create service file
        run: |
          cat > ./app.service <<EOF
          [Unit]
          Description=Carrinho Digital WebAPI
          After=network.target

          [Service]
          Environment=PORT=8080
          Environment=MONGODB_URI=${{ secrets.MONGODB_URI }}
          Environment=SALT=${{ secrets.SALT }}
          Environment=SECRET=${{ secrets.SECRET }}
          Environment=ISSUER=${{ secrets.ISSUER }}
          Environment=AUDIENCE=${{ secrets.AUDIENCE }}
          Environment=EXPIRE_IN_MINUTES=240
          Environment=NODE_ENV=production
          Type=simple
          User=ubuntu
          ExecStart=/usr/bin/node /home/ubuntu/app/web-api/index.js
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
          EOF

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "286.0.0"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          project_id: ${{ env.PROJECT_ID }}

      - name: "Setup GCP Project"
        run: |
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud config set compute/zone ${{ env.GCE_INSTANCE_ZONE }}
          gcloud compute instances add-metadata ${{ env.GCE_INSTANCE }} --metadata enable-oslogin=FALSE

      - name: "Creating App Folder"
        run: |
          gcloud compute ssh "root@${{ env.GCE_INSTANCE }}" --project "${{ env.PROJECT_ID }}" --command "systemctl stop app"
          gcloud compute ssh "root@${{ env.GCE_INSTANCE }}" --project "${{ env.PROJECT_ID }}" --command "rm -rf /lib/systemd/system/app.service"
          gcloud compute ssh "root@${{ env.GCE_INSTANCE }}" --project "${{ env.PROJECT_ID }}" --command "rm -rf /home/ubuntu/app/"
          gcloud compute ssh "root@${{ env.GCE_INSTANCE }}" --project "${{ env.PROJECT_ID }}" --command "mkdir /home/ubuntu/app/"

      - name: "Creating Systemd Configurations"
        run: |
          gcloud compute scp --recurse "${{ github.workspace }}/app.service" root@${{ env.GCE_INSTANCE }}:/lib/systemd/system

      - name: "Creating Reverse Proxy"
        run: |
          gcloud compute scp --recurse "${{ github.workspace }}/app.conf" root@${{ env.GCE_INSTANCE }}:/etc/nginx/conf.d
          gcloud compute ssh "root@${{ env.GCE_INSTANCE }}" --project "${{ env.PROJECT_ID }}" --command "rm -rf /etc/nginx/conf.d/default.conf"
          gcloud compute ssh "root@${{ env.GCE_INSTANCE }}" --project "${{ env.PROJECT_ID }}" --command "nginx -s reload"

      - name: "Upload webapi to GCE instance"
        run: |
          gcloud compute scp --recurse "${{ github.workspace }}/" root@${{ env.GCE_INSTANCE }}:/home/ubuntu/app
          gcloud compute ssh "root@${{ env.GCE_INSTANCE }}" --project "${{ env.PROJECT_ID }}" --command "cd /home/ubuntu/app/web-api && npm install --production"

      # - name: "Executing App"
      #   run: |
      #     gcloud compute ssh "${{ env.GCE_INSTANCE }}" --project "${{ env.PROJECT_ID }}" --command "cd ~/app/web-api/scripts && chmod +x ./start.sh && ./start.sh"

      - name: "Executing App"
        run: |
          gcloud compute ssh "root@${{ env.GCE_INSTANCE }}" --project "${{ env.PROJECT_ID }}" --command "systemctl daemon-reload"
          gcloud compute ssh "root@${{ env.GCE_INSTANCE }}" --project "${{ env.PROJECT_ID }}" --command "systemctl start app"
          gcloud compute instances add-metadata ${{ env.GCE_INSTANCE }} --metadata enable-oslogin=TRUE
